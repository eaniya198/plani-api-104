name: CICD

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: plani-api-repo

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      -
        name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - 
        name: Login ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      -
        name: build and push to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          sed -i "s|<ECR_REPO_URI>|$ECR_REGISTRY/$ECR_REPOSITORY|g" ./taskdef.json
          sed -i "s|<TAGS>|$IMAGE_TAG|g" ./taskdef.json
          zip -r $IMAGE_TAG.zip taskdef.json appspec.yaml
          aws s3 cp $IMAGE_TAG s3://test-sound-pjm/
          echo "Finished"
